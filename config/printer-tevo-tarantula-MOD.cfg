# SEA17:  TEVO Tarantula with large bed 200x280.
# the head offsets set for Narrow vertical Narrow X-Cartgige
# by EkkuZakku: https://www.thingiverse.com/thing:2563543
# with my Rigid backplate: https://www.thingiverse.com/thing:2729956
# and Inductive Sensor Bracket LJ18A3-8-Z/BX by ahalekelly:
# http://www.thingiverse.com/thing:2463855
# You can use your own offsets, e.g. same that you specified in
# firmware Merlin for Tarantula in Configuration.h


# The stepper_x section is used to describe the stepper controlling
# the X axis in a cartesian robot.
[stepper_x]
step_pin: ar54
#   Step GPIO pin (triggered high). This parameter must be provided.
dir_pin: ar55
#   Direction GPIO pin (high indicates positive direction). This
#   parameter must be provided.
enable_pin: !ar38
#   Enable pin (default is enable high; use ! to indicate enable
#   low). If this parameter is not provided then the stepper motor
#   driver must always be enabled.
step_distance: .0125
#   Distance in mm that each step causes the axis to travel. This
#   parameter must be provided.
endstop_pin: ^!ar3
#   Endstop switch detection pin. This parameter must be provided for
#   the X, Y, and Z steppers on cartesian style printers.
#position_min: 0
#   Minimum valid distance (in mm) the user may command the stepper to
#   move to.  The default is 0mm.
position_endstop: 0
#   Location of the endstop (in mm). This parameter must be provided
#   for the X, Y, and Z steppers on cartesian style printers.
position_max: 200
#   Maximum valid distance (in mm) the user may command the stepper to
#   move to. This parameter must be provided for the X, Y, and Z
#   steppers on cartesian style printers.
homing_speed: 130.0
#   Maximum velocity (in mm/s) of the stepper when homing. The default
#   is 5mm/s.
#homing_retract_dist: 5.0
#   Distance to backoff (in mm) before homing a second time during
#   homing. The default is 5mm.
#homing_positive_dir:
#   If true, homing will cause the stepper to move in a positive
#   direction (away from zero); if false, home towards zero. The
#   default is true if position_endstop is near position_max and false
#   if near position_min.

; [tmc2130 stepper_x]
; #cs_pin: PG0
; microsteps: 16
; interpolate: True
; run_current: .8
; hold_current: .281738
; homing_current: .149155
; sense_resistor: 0.110
; #diag1_pin: !PK2
; driver_IHOLDDELAY: 8
; driver_TPOWERDOWN: 0
; driver_BLANK_TIME_SELECT: 2
; driver_TOFF: 3
; driver_HEND: 1
; driver_HSTRT: 5
; driver_PWM_FREQ: 2
; driver_PWM_GRAD: 2
; driver_PWM_AMPL: 230
; driver_PWM_AUTOSCALE: True
; driver_SGT: 3

# The stepper_y section is used to describe the stepper controlling
# the Y axis in a cartesian robot. It has the same settings as the
# stepper_x section.
[stepper_y]
step_pin: ar60
dir_pin: ar61
enable_pin: !ar56
step_distance: .0125
endstop_pin: ^!ar14
position_endstop: 0
position_max: 280
homing_speed: 130.0

; [tmc2130 stepper_y]
; #cs_pin: PG2
; microsteps: 16
; interpolate: True
; run_current: .8
; hold_current: .3480291
; homing_current: .182301
; sense_resistor: 0.110
; #diag1_pin: !PK7
; driver_IHOLDDELAY: 8
; driver_TPOWERDOWN: 0
; driver_BLANK_TIME_SELECT: 2
; driver_TOFF: 3
; driver_HEND: 1
; driver_HSTRT: 5
; driver_PWM_FREQ: 2
; driver_PWM_GRAD: 2
; driver_PWM_AMPL: 230
; driver_PWM_AUTOSCALE: True
; driver_SGT: 3

# The stepper_z section is used to describe the stepper controlling
# the Z axis in a cartesian robot. It has the same settings as the
# stepper_x section.
[stepper_z]
step_pin: ar46
dir_pin: !ar48
enable_pin: !ar62
step_distance: .0025
#endstop_pin: ^!ar18
endstop_pin:  probe:z_virtual_endstop
position_endstop: 0
position_max: 200
homing_speed: 12

; [tmc2130 stepper_z]
; #cs_pin: PK5
; microsteps: 16
; interpolate: True
; run_current: .8
; hold_current: .53033
; homing_current: .348029
; sense_resistor: 0.110
; #diag1_pin: !PK6
; driver_IHOLDDELAY: 8
; driver_TPOWERDOWN: 0
; driver_BLANK_TIME_SELECT: 2
; driver_TOFF: 3
; driver_HEND: 1
; driver_HSTRT: 5
; driver_PWM_FREQ: 2
; driver_PWM_GRAD: 4
; driver_PWM_AMPL: 200
; driver_PWM_AUTOSCALE: True
; driver_SGT: 4

# The extruder section is used to describe both the stepper
# controlling the printer extruder and the heater parameters for the
# nozzle. The stepper configuration has the same settings as the
# stepper_x section and the heater configuration has the same settings
# as the heater_bed section (described below).
[extruder]
step_pin: ar36
dir_pin: ar34
enable_pin: !ar30
step_distance: .00266
nozzle_diameter: 0.400
#   Diameter of the nozzle orifice (in mm). This parameter must be
#   provided.
filament_diameter: 1.750
#max_extrude_cross_section:
#   Maximum area of the cross section of an extrusion line (in
#   mm^2). This setting prevents excessive amounts of extrusion during
#   relatively small XY moves. If a move requests an extrusion rate
#   that would exceed this value it will cause an error to be
#   returned. The default is: 4.0 * nozzle_diameter^2
#max_extrude_only_distance: 50.0
#   Maximum length (in mm of raw filament) that an extrude only move
#   may be. If an extrude only move requests a distance greater than
#   this value it will cause an error to be returned. The default is
#   50mm.
#max_extrude_only_velocity:
#   Maximum velocity (in mm/s) of the extruder motor for extrude only
#   moves. If this is not specified then it is calculated to match the
#   limit an XY printing move with a max_extrude_cross_section
#   extrusion would have.
#max_extrude_only_accel:
#   Maximum acceleration (in mm/s^2) of the extruder motor for extrude
#   only moves. If this is not specified then it is calculated to
#   match the limit an XY printing move with a
#   max_extrude_cross_section extrusion would have.
#pressure_advance: 0.0
#   The amount of raw filament to push into the extruder during
#   extruder acceleration. An equal amount of filament is retracted
#   during deceleration. It is measured in millimeters per
#   millimeter/second. The default is 0, which disables pressure
#   advance.
#pressure_advance_lookahead_time: 0.010
#   A time (in seconds) to "look ahead" at future extrusion moves when
#   calculating pressure advance. This is used to reduce the
#   application of pressure advance during cornering moves that would
#   otherwise cause retraction followed immediately by pressure
#   buildup. This setting only applies if pressure_advance is
#   non-zero. The default is 0.010 (10 milliseconds).
#
# The remaining variables describe the extruder heater.
heater_pin: ar7
#   PWM output pin controlling the heater. This parameter must be
#   provided.
#max_power: 1.0
#   The maximum power (expressed as a value from 0.0 to 1.0) that the
#   heater_pin may be set to. The value 1.0 allows the pin to be set
#   fully enabled for extended periods, while a value of 0.5 would
#   allow the pin to be enabled for no more than half the time. This
#   setting may be used to limit the total power output (over extended
#   periods) to the heater. The default is 1.0.
sensor_type: EPCOS 100K B57560G104F
sensor_pin: analog13
control: pid
#   Control algorithm (either pid or watermark). This parameter must
#   be provided.
pid_Kp: 24.18
pid_Ki: 2.19
pid_Kd: 66.86
#min_extrude_temp: 170
min_temp: 0
max_temp: 270
#   The maximum range of valid temperatures (in Celsius) that the
#   heater must remain within. This controls a safety feature
#   implemented in the micro-controller code - should the measured
#   temperature ever fall outside this range then the micro-controller
#   will go into a shutdown state. This check can help detect some
#   heater and sensor hardware failures. Set this range just wide
#   enough so that reasonable temperatures do not result in an
#   error. These parameters must be provided.

; [tmc2130 extruder]
; #cs_pin: PK4
; microsteps: 32
; interpolate: True
; run_current: .8
; hold_current: .513757
; homing_current: .314883
; sense_resistor: 0.110
; #diag1_pin: !PK3
; driver_IHOLDDELAY: 8
; driver_TPOWERDOWN: 0
; driver_BLANK_TIME_SELECT: 2
; driver_TOFF: 3
; driver_HEND: 1
; driver_HSTRT: 5
; driver_PWM_FREQ: 2
; driver_PWM_GRAD: 4
; driver_PWM_AMPL: 240
; driver_PWM_AUTOSCALE: True
; driver_SGT: 3

# The heater_bed section describes a heated bed (if present - omit
# section if not present).
[heater_bed]
heater_pin: ar8
sensor_type: EPCOS 100K B57560G104F
sensor_pin: analog14
control: pid
pid_Kp: 984.88
pid_Ki: 193.91
pid_Kd: 1250.55

min_temp: 0
max_temp: 100

# Print cooling fan (omit section if fan not present).
[fan]
pin: ar9
#hardware_pwm: False

# Micro-controller information.
[mcu]
serial: /dev/ttyTEVO
#   The serial port to connect to the MCU. If unsure (or if it
#   changes) see the "Where's my serial port?" section of the FAQ. The
#   default is /dev/ttyS0
baud: 115200
#   The baud rate to use. The default is 250000.
pin_map: arduino

# The printer section controls high level printer settings.
[printer]
kinematics: cartesian
max_velocity: 300
#   Maximum velocity (in mm/s) of the toolhead (relative to the
#   print). This parameter must be specified.
max_accel: 1500
#   Maximum acceleration (in mm/s^2) of the toolhead (relative to the
#   print). This parameter must be specified.
max_z_velocity: 10
#   For cartesian printers this sets the maximum velocity (in mm/s) of
#   movement along the z axis. This setting can be used to restrict
#   the maximum speed of the z stepper motor on cartesian
#   printers. The default is to use max_velocity for max_z_velocity.
max_z_accel: 200
#square_corner_velocity: 5.0
#   The default is 5mm/s.



# Z height probe. One may define this section to enable Z height
# probing hardware. When this section is enabled, PROBE and
# QUERY_PROBE extended g-code commands become available. The probe
# section also creates a virtual "probe:z_virtual_endstop" pin. One
# may set the stepper_z endstop_pin to this virtual pin on cartesian
# style printers that use the probe in place of a z endstop.
[probe]
pin: ^!ar18
#	This creates a virtual "probe:z_virtual_endstop" pin for z-stop
x_offset: 39
#   The distance (in mm) between the probe and the nozzle along the
#   x-axis. The default is 0.
y_offset: -21
#   The distance (in mm) between the probe and the nozzle along the
#   y-axis. The default is 0.
z_offset: 2.4
#   The distance (in mm) between the bed and the nozzle when the probe
#   triggers. This parameter must be provided.
speed: 10.0
#   Speed (in mm/s) of the Z axis when probing. The default is 5mm/s.
#activate_gcode:
#   A list of G-Code commands (one per line) to execute prior to each
#   probe attempt. This may be useful if the probe needs to be
#   activated in some way. The default is to not run any special
#   G-Code commands on activation.
#deactivate_gcode:
#   A list of G-Code commands (one per line) to execute after each
#   probe attempt completes. The default is to not run any special
#   G-Code commands on deactivation.


# Mesh Bed Leveling. One may define a [bed_mesh] config section
# to enable move transformations that offset the z axis based
# on a mesh generated from probed points. Note that bed_mesh
# and bed_tilt are incompatible, both cannot be defined.
# BED_MESH_CALIBRATE
[bed_mesh]
speed: 60
#   The default is 50.
min_point: 20,20
#   An X,Y point defining the minimum coordinate to probe on
#   the bed. Note that this refers to the nozzle position,
#   and take care that you do not define a point that will move
#   the probe off of the bed. This parameter must be provided.
max_point: 180,260
#   An X,Y point defining the maximum coordinate to probe on
#   the bed. Follow the same precautions as listed in min_point.
#   Also note that this does not necessarily define the last point
#   probed, only the maximum coordinate. This parameter must be provided.
probe_count: 3,4
#   A comma separated pair of integer values (X,Y) defining the number
#   of points to probe along each axis. A single value is also valid,
#   in which case that value will be for both axes. Default is 3,3
#   which probes a 3x3 grid.


# Support for a display attached to the micro-controller.
# "RepRapDiscount 2004 Smart Controller" type displays
# SEA17 note: the default display TEVO Tarantula:
[display]
lcd_type: hd44780
rs_pin: ar16
e_pin: ar17
d4_pin: ar23
d5_pin: ar25
d6_pin: ar27
d7_pin: ar29
# These display inputs did not work. Not implemented yet?
encoder_pins:  ar31 ar33
click_pin: ar35


[homing_override]
set_position_z: 5
gcode:
	G90
	G1 Z7 F600 ; Blindly lift the Z 7mm at start
	G28 X0 Y0
	G1 X100 Y140 F3600
	G28 Z0
